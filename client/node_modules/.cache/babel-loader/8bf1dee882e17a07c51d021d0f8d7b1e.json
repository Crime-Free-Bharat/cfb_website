{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anmol\\\\Documents\\\\GitHub\\\\cfb_website\\\\client\\\\src\\\\components\\\\FAQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\nimport data from \"./data\";\nimport SingleQuestion from \"./Question\"; // styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containers = {\n  padding: \"1.5% auto\",\n  margin: \"1.5%\"\n};\nconst faqHeading = {\n  color: \"rgba(16, 0, 81, 1)\",\n  fontFamily: \"Roboto, Sans-Serif\",\n  fontSize: \"32px\",\n  lineHeight: \"35px\",\n  fontWeight: \"bold\",\n  margin: \"2rem auto\"\n};\nconst infor = {\n  margin: \"3rem auto\",\n  padding: \"3%\",\n  fontFamily: \"Roboto, Sans-Serif\"\n};\nconst btns = {\n  borderRadius: \"100%\",\n  borderColor: \"#fff\",\n  backgroundColor: \"rgba(76, 0, 185, 1)\",\n  width: \"auto\",\n  color: \"#fff\"\n};\nconst pagination = {\n  padding: \"1%\",\n  textAlign: \"right\",\n  marginRight: \"20%\"\n};\n\nfunction FAQ() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [questionPerPage] = useState(5);\n  const [questions] = useState(data);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const searchedQuestions = questions.filter(val => {\n    if (val.title.toLowerCase().includes(searchTerm.toLowerCase()) || val.info.toLowerCase().includes(searchTerm.toLowerCase())) {\n      return val;\n    }\n  });\n  const indexOfLastQuestion = currentPage * questionPerPage;\n  const indexOfFirstQuestion = indexOfLastQuestion - questionPerPage;\n  const currentQuestions = searchedQuestions.slice(indexOfFirstQuestion, indexOfLastQuestion);\n  const totalPages = Math.floor(searchedQuestions.length / questionPerPage) + 1;\n  let navigator = currentPage;\n\n  const next = () => {\n    if (navigator + 1 > totalPages) {\n      navigator = 1;\n    } else {\n      navigator++;\n    }\n\n    setCurrentPage(navigator);\n  };\n\n  const previous = () => {\n    if (navigator < 2) {\n      navigator = totalPages;\n    } else {\n      navigator--;\n    }\n\n    setCurrentPage(navigator);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    style: containers,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        md: 4,\n        lg: 4,\n        style: infor,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"https://image.freepik.com/free-vector/organic-flat-people-asking-questions-illustration_23-2148906283.jpg\",\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 7,\n        md: 7,\n        lg: 7,\n        style: infor,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: faqHeading,\n          children: \"Frequently Asked Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              margin: \"3% auto\"\n            },\n            type: \"text\",\n            placeholder: \"Search for questions...\",\n            onChange: event => {\n              setSearchTerm(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), currentQuestions.map(question => {\n            return /*#__PURE__*/_jsxDEV(SingleQuestion, { ...question\n            }, question.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 22\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: pagination,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              style: btns,\n              onClick: previous,\n              disabled: currentPage === 1,\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [currentPage, \"/\", totalPages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              style: btns,\n              onClick: next,\n              disabled: currentPage === totalPages,\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FAQ, \"rdoaHG2PRc7+gmb1Cubr7qZEvyY=\");\n\n_c = FAQ;\nexport default FAQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"sources":["C:/Users/Anmol/Documents/GitHub/cfb_website/client/src/components/FAQ.js"],"names":["React","useState","Container","Row","Col","Image","Button","data","SingleQuestion","containers","padding","margin","faqHeading","color","fontFamily","fontSize","lineHeight","fontWeight","infor","btns","borderRadius","borderColor","backgroundColor","width","pagination","textAlign","marginRight","FAQ","currentPage","setCurrentPage","questionPerPage","questions","searchTerm","setSearchTerm","searchedQuestions","filter","val","title","toLowerCase","includes","info","indexOfLastQuestion","indexOfFirstQuestion","currentQuestions","slice","totalPages","Math","floor","length","navigator","next","previous","event","target","value","map","question","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport data from \"./data\";\r\nimport SingleQuestion from \"./Question\";\r\n\r\n// styles\r\nconst containers = {\r\n  padding: \"1.5% auto\",\r\n  margin: \"1.5%\"\r\n};\r\n\r\nconst faqHeading = {\r\n  color: \"rgba(16, 0, 81, 1)\",\r\n  fontFamily: \"Roboto, Sans-Serif\",\r\n  fontSize: \"32px\",\r\n  lineHeight: \"35px\",\r\n  fontWeight: \"bold\",\r\n  margin: \"2rem auto\"\r\n};\r\n\r\nconst infor = {\r\n  margin: \"3rem auto\",\r\n  padding: \"3%\",\r\n  fontFamily: \"Roboto, Sans-Serif\"\r\n};\r\n\r\nconst btns = {\r\n  borderRadius: \"100%\",\r\n  borderColor: \"#fff\",\r\n  backgroundColor: \"rgba(76, 0, 185, 1)\",\r\n  width: \"auto\",\r\n  color : \"#fff\"\r\n};\r\nconst pagination = {\r\n  padding: \"1%\",\r\n  textAlign: \"right\",\r\n  marginRight: \"20%\"\r\n};\r\nfunction FAQ() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [questionPerPage] = useState(5);\r\n  const [questions] = useState(data);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const searchedQuestions = questions.filter((val) => {\r\n    if (\r\n      val.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      val.info.toLowerCase().includes(searchTerm.toLowerCase())\r\n    ) {\r\n      return val;\r\n    }\r\n  });\r\n  const indexOfLastQuestion = currentPage * questionPerPage;\r\n  const indexOfFirstQuestion = indexOfLastQuestion - questionPerPage;\r\n  const currentQuestions = searchedQuestions.slice(\r\n    indexOfFirstQuestion,\r\n    indexOfLastQuestion\r\n  );\r\n  const totalPages = Math.floor(searchedQuestions.length / questionPerPage) + 1;\r\n  let navigator = currentPage;\r\n  const next = () => {\r\n    if (navigator + 1 > totalPages) {\r\n      navigator = 1;\r\n    } else {\r\n      navigator++;\r\n    }\r\n    setCurrentPage(navigator);\r\n  };\r\n  const previous = () => {\r\n    if (navigator < 2) {\r\n      navigator = totalPages;\r\n    } else {\r\n      navigator--;\r\n    }\r\n    setCurrentPage(navigator);\r\n  };\r\n  return (\r\n    <Container fluid style={containers}>\r\n      <Row>\r\n        <Col xs={4} md={4} lg={4} style={infor}>\r\n          <Image\r\n            src=\"https://image.freepik.com/free-vector/organic-flat-people-asking-questions-illustration_23-2148906283.jpg\"\r\n            fluid\r\n          />\r\n        </Col>\r\n        <Col xs={7} md={7} lg={7} style={infor}>\r\n          <h3 style={faqHeading}>Frequently Asked Questions</h3>\r\n          <section>\r\n            <input\r\n              style={{ margin: \"3% auto\" }}\r\n              type=\"text\"\r\n              placeholder=\"Search for questions...\"\r\n              onChange={(event) => {\r\n                setSearchTerm(event.target.value);\r\n              }}\r\n            />\r\n            {currentQuestions.map((question) => {\r\n              return <SingleQuestion key={question.id} {...question} />;\r\n            })}\r\n            <div style={pagination}>\r\n              <Button\r\n                variant=\"info\"\r\n                style={btns}\r\n                onClick={previous}\r\n                disabled={currentPage === 1}\r\n              >\r\n                {\"<\"}\r\n              </Button>\r\n              <span>\r\n                {currentPage}\r\n                {\"/\"}\r\n                {totalPages}\r\n              </span>\r\n\r\n              <Button\r\n                variant=\"info\"\r\n                style={btns}\r\n                onClick={next}\r\n                disabled={currentPage === totalPages}\r\n              >\r\n                {\">\"}\r\n              </Button>\r\n            </div>\r\n          </section>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FAQ;\r\n"]},"metadata":{},"sourceType":"module"}